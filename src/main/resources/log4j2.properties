# -------- Extra logging related to initialization of Log4j

status = warn
# -------- Name of the configuration
name = ConsoleLogConfigDemo

#Log files location

appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName= Logs/propertieslogs.log
#appender.file.layout.type= PatternLayout
#appender.file.layout.pattern= %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/app.log
appender.rolling.filePattern= ${basePath}/app_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies


# -------- Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
#  %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# -------- Root helpers level
# -------- Set to debug or trace if log4j initialization is failing

rootLogger.level = info

# -------- Root helpers referring to console appender
rootLogger.appenderRef.stdout.ref = consoleLogger

#logger.trace("This is a trace message");
#logger.debug("This is a debug message");
#logger.info("This is an info message");
#logger.warn("This is a warn message");
#logger.error("This is an error message");
#logger.fatal("This is a fatal message");